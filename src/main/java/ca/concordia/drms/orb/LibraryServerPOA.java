package ca.concordia.drms.orb;


/**
* ca/concordia/drms/orb/LibraryServerPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from drms.idl
* Saturday, November 15, 2014 2:44:03 PM EST
*/

public abstract class LibraryServerPOA extends org.omg.PortableServer.Servant
 implements ca.concordia.drms.orb.LibraryServerOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("createAccount", new java.lang.Integer (0));
    _methods.put ("reserveBook", new java.lang.Integer (1));
    _methods.put ("reserveInterLibrary", new java.lang.Integer (2));
    _methods.put ("getNonReturners", new java.lang.Integer (3));
    _methods.put ("setDuration", new java.lang.Integer (4));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {

  /**
  						 * Function that creates an account if the account does not exists 
  						 * @param first
  						 * @param last
  						 * @param email
  						 * @param telephone
  						 * @param username
  						 * @param password
  						 * @param institution
  						 */
       case 0:  // ca/concordia/drms/orb/LibraryServer/createAccount
       {
         try {
           String first = in.read_string ();
           String last = in.read_string ();
           String email = in.read_string ();
           String telephone = in.read_string ();
           String username = in.read_string ();
           String password = in.read_string ();
           String institution = in.read_string ();
           this.createAccount (first, last, email, telephone, username, password, institution);
           out = $rh.createReply();
         } catch (ca.concordia.drms.orb.RemoteException $ex) {
           out = $rh.createExceptionReply ();
           ca.concordia.drms.orb.RemoteExceptionHelper.write (out, $ex);
         }
         break;
       }


  /**
  						 * This function checks current library, to reserve a book
  						 * @param username
  						 * @param password
  						 * @param title
  						 * @param author
  						 */
       case 1:  // ca/concordia/drms/orb/LibraryServer/reserveBook
       {
         try {
           String username = in.read_string ();
           String password = in.read_string ();
           String title = in.read_string ();
           String author = in.read_string ();
           this.reserveBook (username, password, title, author);
           out = $rh.createReply();
         } catch (ca.concordia.drms.orb.RemoteException $ex) {
           out = $rh.createExceptionReply ();
           ca.concordia.drms.orb.RemoteExceptionHelper.write (out, $ex);
         }
         break;
       }


  /**
  						 * This function checks current library, to reserve a book
  						 * @param username
  						 * @param password
  						 * @param title
  						 * @param author
  						 */
       case 2:  // ca/concordia/drms/orb/LibraryServer/reserveInterLibrary
       {
         try {
           String username = in.read_string ();
           String password = in.read_string ();
           String title = in.read_string ();
           String author = in.read_string ();
           this.reserveInterLibrary (username, password, title, author);
           out = $rh.createReply();
         } catch (ca.concordia.drms.orb.RemoteException $ex) {
           out = $rh.createExceptionReply ();
           ca.concordia.drms.orb.RemoteExceptionHelper.write (out, $ex);
         }
         break;
       }


  /**
  						 * uses messages to send back and forth stream of info 
  						 * @param <V>
  						 * @param <K>
  						 * @param username
  						 * @param password
  						 * @param institution
  						 * @param days
  						 * @return
  						 */
       case 3:  // ca/concordia/drms/orb/LibraryServer/getNonReturners
       {
         try {
           String username = in.read_string ();
           String password = in.read_string ();
           String institution = in.read_string ();
           int days = in.read_long ();
           ca.concordia.drms.orb.Reservation $result[] = null;
           $result = this.getNonReturners (username, password, institution, days);
           out = $rh.createReply();
           ca.concordia.drms.orb.ReservationListHelper.write (out, $result);
         } catch (ca.concordia.drms.orb.RemoteException $ex) {
           out = $rh.createExceptionReply ();
           ca.concordia.drms.orb.RemoteExceptionHelper.write (out, $ex);
         }
         break;
       }


  /**
  						 * 
  						 * @param username
  						 * @param title
  						 * @param days
  						 * @throws RemoteException
  						 */
       case 4:  // ca/concordia/drms/orb/LibraryServer/setDuration
       {
         try {
           String username = in.read_string ();
           String title = in.read_string ();
           int days = in.read_long ();
           this.setDuration (username, title, days);
           out = $rh.createReply();
         } catch (ca.concordia.drms.orb.RemoteException $ex) {
           out = $rh.createExceptionReply ();
           ca.concordia.drms.orb.RemoteExceptionHelper.write (out, $ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:ca/concordia/drms/orb/LibraryServer:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public LibraryServer _this() 
  {
    return LibraryServerHelper.narrow(
    super._this_object());
  }

  public LibraryServer _this(org.omg.CORBA.ORB orb) 
  {
    return LibraryServerHelper.narrow(
    super._this_object(orb));
  }


} // class LibraryServerPOA
